<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="storySQL">
	
	<select id="getList" parameterType="storySearchFilter" resultType="story" >
		SELECT C.*, D.cmt FROM(
		    SELECT * FROM(
		        SELECT ROWNUM rn, A.*, B.nickname, B.imgProfile FROM(
		            SELECT bno, rno, seq, title, likes, views, hashtag, date_write, date_update, file_name, image_name, fixed, is_domestic 
		            FROM essay
		            WHERE fixed = 1
		            UNION
		            SELECT bno, rno, seq, title, likes, views, hashtag, date_write, date_update, '' AS file_name, image_name, fixed, is_domestic 
		            FROM route
		            WHERE fixed = 1
		            ORDER BY rno DESC
		        ) A JOIN users B on A.seq = B.seq WHERE (nickname like '%${keyword}%' or title like '%${keyword}%' or hashtag like '%${keyword}%')
		    ) WHERE rn &gt; (#{start}-1) AND rn &lt; (#{end}+1)
		) C LEFT OUTER JOIN (SELECT COUNT(*) CMT, BNO FROM CMT GROUP BY BNO) D on C.bno = D.bno ORDER BY RNO DESC
	</select>
	
	<select id="getFriends" parameterType="storySearchFilter" resultType="java.util.Map" >
        SELECT E.*, NVL(F.request_count,0) request_count FROM (
            SELECT C.*, D.nickname, D.grade, D.imgprofile, D.warn FROM(
                SELECT ROWNUM rn, A.*, B.fcno, B.city FROM (
                    SELECT fno, seq, id, title, is_domestic, to_char(dateStart, 'YYYY-MM-DD') AS dateStart, to_char(dateEnd, 'YYYY-MM-DD') AS dateEnd, is_finish, kakao_chat, to_char(date_of_issue, 'YYYY-MM-DD') AS date_of_issue, is_normal FROM
                    friends order by fno desc
                )A JOIN (SELECT Z.fno, Z.fcno, X.city FROM (SELECT fno, MIN(fcno) fcno FROM friends_route GROUP BY fno)Z JOIN (SELECT fcno, city FROM friends_route)X ON Z.fcno = X.fcno
                )B ON A.FNO = B.FNO
            )C JOIN (SELECT seq, realname, nickname, grade, gender, birthdate, imgprofile, warn FROM users
            )D ON C.seq = D.seq WHERE rn &gt; (#{start}-1) AND rn &lt; (#{end}+1) AND (title like '%${keyword}%' or nickname like '%${keyword}%')
        )E LEFT OUTER JOIN (SELECT fcno, COUNT(*) request_count FROM friend_request group by fcno) F ON E.fcno = F.fcno
	</select>
	
	<select id="getPurchases" parameterType="storySearchFilter" resultType="java.util.Map" >	
	    SELECT * FROM(
	        SELECT ROWNUM rn, A.*, B.imgprofile FROM
	            (SELECT bno,title,nickname,writeUserSeq,productname,img, price,quantity,location,content,to_char(dateWrite, 'YYYY-MM-DD') AS dateWrite,to_char(dateStart, 'YYYY-MM-DD') AS dateStart,to_char(dateEnd, 'YYYY-MM-DD') AS dateEnd,  requestUserSeq,requestUsername, con
	            from purchase order by bno desc)A JOIN users B on A.nickname = B.nickname WHERE (A.nickname like '%${keyword}%' or title like '%${keyword}%')
	    ) WHERE rn &gt; (#{start}-1) AND rn &lt; (#{end}+1)
	</select>	
	
</mapper>