<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="routeSQL">

    <insert id="setRoute" parameterType="route">
        INSERT INTO route (bno, rno, seq, title, fixed, is_domestic, image_name)
        VALUES (bno.nextval, rno.nextval, #{seq}, #{title, jdbcType=VARCHAR}, 0, #{isDomestic}, #{imageName})
    </insert>

    <update id="saveRoute" parameterType="route">
        begin
            UPDATE route
            SET content=#{content},
                hashtag=#{hashtag},
                date_write=SYSDATE,
                date_update=SYSDATE,
                fixed=1
            where rno = #{rno}
              and seq = #{seq};
            UPDATE route_content SET fixed=1 WHERE rno = #{rno};
        end;
    </update>

    <select id="getRoute" parameterType="Integer" resultType="route">
        SELECT bno, C.rno, C.seq, title, content, likes, views, hashtag, date_write, date_update, image_name, fixed, is_domestic, date_from, date_to, nickname FROM (
            SELECT bno, A.rno, seq, title, content, likes, views, hashtag, date_write, date_update, image_name, fixed, is_domestic,  TO_CHAR(date_from,'YYYY-MM-DD') AS date_from, TO_CHAR(date_to,'YYYY-MM-DD') AS date_to FROM (
                SELECT * FROM route
            ) A JOIN (
                SELECT min(date_start) as date_from, max(date_end) as date_to, rno from route_content GROUP BY rno
            ) B ON A.rno = B.rno WHERE A.rno=#{rno}
        ) C JOIN (SELECT nickname, seq from users) D ON C.seq = D.seq
    </select>

    <select id="getRouteByBno" parameterType="int" resultType="route">
        SELECT *
        FROM route
        WHERE bno = #{bno}
    </select>

    <select id="getCurrRnoSeq" resultType="Integer">
        SELECT rno.CURRVAL
        FROM DUAL
    </select>

    <update id="updateViews" parameterType="Integer">
        UPDATE route
        SET views = views + 1
        WHERE rno = #{rno}
    </update>

    <insert id="saveCourse" parameterType="routeContent">
        INSERT INTO route_content (crno, rno, content, lat, lng, location, date_start, date_end, score, fixed)
        VALUES (crno.NEXTVAL, #{rno}, #{content}, #{lat}, #{lng}, #{location},
                TO_DATE('${dateStart}', 'YYYY-MM-DD'), TO_DATE('${dateEnd}', 'YYYY-MM-DD'), #{score}, 0)
    </insert>
    
    <update id="saveOrder" parameterType="Map">
        UPDATE route_content
        SET cnt_order=#{cntOrder}
        WHERE crno = #{crno}
    </update>
    
    <update id="patchCourse" parameterType="routeContent">
        UPDATE route_content
        SET content=#{content},
            lat=#{lat},
            lng=#{lng},
            location=#{location},
            date_start=TO_DATE('${dateStart}', 'YYYY-MM-DD'),
            date_end=TO_DATE('${dateEnd}', 'YYYY-MM-DD'),
            score=#{score}
        WHERE rno = #{rno}
          AND crno = #{crno}
    </update>
    
    <delete id="deleteCourse" parameterType="Integer">
        DELETE route_content
        WHERE crno = #{crno}
    </delete>
    

    <select id="getCourse" parameterType="Integer" resultType="routeContent">
        SELECT crno,
               rno,
               content,
               lat,
               lng,
               location,
               TO_CHAR(date_start, 'YYYY-MM-DD') AS date_start,
               TO_CHAR(date_end, 'YYYY-MM-DD')   AS date_end,
               score,
               fixed,
               cnt_order
        FROM route_content
        WHERE crno = #{crno}
    </select>

    <select id="getCurrCrnoSeq" resultType="Integer">
        SELECT crno.CURRVAL
        FROM DUAL
    </select>

    <insert id="saveRouteImage" parameterType="routeImage">
        INSERT INTO route_image
        VALUES (ino.nextVal, #{crno}, #{img}, #{imgOrder})
    </insert>

    <select id="getRouteContentStory" parameterType="int" resultType="routeContent">
        SELECT *
        FROM route_content
        WHERE RNO = #{rno}
        ORDER BY cnt_order DESC
    </select>
    

    <select id="getRouteImageStory" parameterType="int" resultType="routeImage">
        SELECT img
        FROM route_image
        WHERE CRNO = #{CRNO}
    </select>

    <select id="getRouteListByUserSeq" parameterType="int" resultType="route">
        SELECT * FROM route WHERE seq = #{seq} AND fixed = 1
    </select>
    
	<select id="getRouteFromTo" parameterType="int" resultType="Map">
		SELECT min(date_start) as route_from, max(date_end) as route_to from route_content WHERE rno=#{rno};
	</select>

</mapper>